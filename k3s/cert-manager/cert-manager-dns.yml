apiVersion: v1
kind: ConfigMap
metadata:
  name: dns-cert-manager
  namespace: cert-manager
data:
  Corefile: |
    .:53 {
        errors
        health
        ready
        template IN A {
          answer "{{ .Name }} 60 IN CNAME traefik.traefik.svc.cluster.local"
        }
        prometheus :9153
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
    }
    cluster.local {
      forward . 10.43.0.10
    }
    letsencrypt.org. {
          forward . 8.8.8.8
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dns-cert-manager
  namespace: cert-manager
  labels:
    k8s-app: dns-cert-manager
    kubernetes.io/name: "CoreDNSCert"
spec:
  # replicas: not specified here:
  # 1. Default is 1.
  # 2. Will be tuned in real time if DNS horizontal auto-scaling is turned on.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      k8s-app: dns-cert-manager
      app.kubernetes.io/name: dns-cert-manager
  template:
    metadata:
      labels:
        k8s-app: dns-cert-manager
        app.kubernetes.io/name: dns-cert-manager
    spec:
      containers:
      - name: coredns
        image: coredns/coredns:1.9.4
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        args: [ "-conf", "/etc/coredns/Corefile" ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
          readOnly: true
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
      dnsPolicy: Default
      volumes:
        - name: config-volume
          configMap:
            name:  dns-cert-manager
            items:
            - key: Corefile
              path: Corefile
---
apiVersion: v1
kind: Service
metadata:
  name: dns-cert-manager
  namespace: cert-manager
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "false"
  labels:
    k8s-app: dns-cert-manager
spec:
  selector:
    k8s-app: dns-cert-manager
  clusterIP: 10.43.0.93
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP